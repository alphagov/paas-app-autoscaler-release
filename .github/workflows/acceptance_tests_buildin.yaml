name: Acceptance Tests (Buildin)
on:
  pull_request:
    types: [ opened, labeled, synchronize ]
    paths:
      - 'src/acceptance/**'

env:
  MAVEN_VERSION: 3.6.3
  MAVEN_SHA: c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0
  BUILDIN_MODE: true
  SERVICE_OFFERING_ENABLED: false
  check_name: "acceptance_test_check_buildin"
  PR_NUMBER: "${{ github.event.pull_request.number }}"
  DEPLOYMENT_NAME: "autoscaler-${{ github.event.pull_request.number }}"
  SERVICE_BROKER_NAME: "autoscaler-${{ github.event.pull_request.number }}servicebroker"
  SERVICE_NAME: "autoscaler-${{ github.event.pull_request.number }}"
  BBL_STATE_PATH: "${{ github.workspace }}/bbl/bbl-state"
  NAME_PREFIX: "autoscaler-${{ github.event.pull_request.number }}-TESTS"
  GINKGO_OPTS: "--fail-fast"
  NODES: 3
  AUTOSCALER_DIR: "${{ github.workspace }}/app-autoscaler-release"
  CI_DIR: "${{ github.workspace }}/app-autoscaler-release/ci"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  acceptance_pending_check:
    outputs:
      check_id: ${{ steps.create_check.outputs.check_id }}
    # if open and synchronised events happen just check if it has the label
    #  or if label event and has the correct label added we might be able to just remove this
    if: |
      ( ( github.event.action == 'opened' || github.event.action == 'synchronize' )
          && ( contains(github.event.pull_request.labels.*.name, 'allow-acceptance-tests') || contains(github.event.pull_request.labels.*.name, 'dependencies') )
      ) ||
      (  ( github.event.action == 'labeled' )
          && ( github.event.label.name == 'allow-acceptance-tests' ||  github.event.label.name == 'dependencies' )
      )
    name: Post pending test check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - name: "Create the check"
        id: create_check
        uses: ./app-autoscaler-release/.github/actions/pending_check-create
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  #Note: All the tests that can fail and should be reported in the error result need to end with "acceptance tests" to enable filtering of the checks.
  deploy_autoscaler:
    needs: [ acceptance_pending_check ]
    name: Deploy autoscaler
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      # TODO: unhashme
      # - uses: ./app-autoscaler-release/.github/actions/acceptance_setup
      #   with:
      #     ssh-key: ${{ secrets.BBL_SSH_KEY }}
      - name: deploy autoscaler
        run: |
          echo ">> WIP: exiting early"; exit 0
          cd ${{ env.AUTOSCALER_DIR }}
          make deployment

  acceptance_test_api:
    needs: [ deploy_autoscaler ]
    name: API acceptance tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      # TODO: unhashme
      # - uses: ./app-autoscaler-release/.github/actions/acceptance_setup
      #   with:
      #     ssh-key: ${{ secrets.BBL_SSH_KEY }}
      - name: run acceptance test - api
        run: |
          echo ">> WIP: exiting early"; exit 0
          cd ${{ env.AUTOSCALER_DIR }}
          make acceptance-tests SUITES="api"

  acceptance_test_app:
    needs: [ deploy_autoscaler ]
    name: APP acceptance tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      # TODO: unhash me
      # - uses: ./app-autoscaler-release/.github/actions/acceptance_setup
      #   with:
      #     ssh-key: ${{ secrets.BBL_SSH_KEY }}
      - name: run acceptance test - app
        run: |
         echo ">> WIP: exiting early"; exit 0
         cd ${{ env.AUTOSCALER_DIR }}
         make acceptance-tests SUITES="app"

  ### This is a final node to indicate the completion of all the acceptance tests
  acceptance_completion_check:
    # Relying on transitivity in github-actions did not work reliably in the past, so we add everything:
    needs: [ acceptance_pending_check, deploy_autoscaler, acceptance_test_app, acceptance_test_api ]
    name: Submit run conclusion
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - name: "Send succes to awaiting check"
        uses: ./app-autoscaler-release/.github/actions/pending_check-conclusion
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_id: ${{ needs.acceptance_pending_check.outputs.check_id }}


  deployment_cleanup:
    needs: [ acceptance_completion_check ]
    name: Cleanup deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: app-autoscaler-release
      - uses: ./app-autoscaler-release/.github/actions/acceptance_setup
        with:
          ssh-key: ${{ secrets.BBL_SSH_KEY }}
      - run: |
          cd ${{ env.AUTOSCALER_DIR }}
          make deployment-cleanup


  report_result:
    needs: [ acceptance_completion_check ]
    if: ${{ always() }}
    name: Report Tests Result (Buildin)
    runs-on: ubuntu-latest
    permissions:
      checks: read
      actions: read
    steps:
      - name: Retrieve and assume last acceptance test result
        env:
          PR_SHA: "${{github.event.pull_request.head.sha}}"
        run: |
          # Checking run under ACT with override option
          eval ${ACT_RUN}

          echo "::group::Getting the latest acceptance test result"
          set -eo pipefail
          echo "Getting the last result"
          curl -sf  -H "Accept: application/vnd.github+json" \
            --retry 5 \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${PR_SHA}/check-runs" \
            | jq '[.check_runs[] | select(.name=="${{env.check_name}}")]' > results.json
          jq '.|last' results.json > latest_result.json
          check_suite=$( jq '.check_suite.id' latest_result.json )
          id=$( jq '.id' latest_result.json )
          conclusion=$( jq -r '.conclusion' latest_result.json )
          number_of_checks=$(jq '. | length' results.json)
          echo "== Latest ${{env.check_name}} check result =="
          echo
          cat latest_result.json
          echo "::endgroup::"

          echo "::group::Check Info"
          echo "Latest check id:${id}"
          echo "Number of checks for commit ${PR_SHA} ${number_of_checks}"
          echo "Conclustion of check: ${conclusion}"
          echo "::endgroup::"

          if [ ${number_of_checks} -eq 0 ]; then
            echo "Error: The Acceptance tests have never been run for this commit!"
            echo "Add the correct label to enable the running of the acceptance tests."
            exit 1
          fi

          if [ "${conclusion}" != "success" ]; then
            echo "Error: The latest Acceptance Test run failed!"
            echo
            echo "List of the failed checks:"
            echo "=========================="
            curl -sf --retry 5 "https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/${PR_SHA}/check-runs" \
                |  jq '.check_runs[] | select(.conclusion == "failure") | select(.name? | match(".*acceptance tests")) | " - \(.name): \(.html_url)"'
            echo "=========================="
            exit 1
          fi