<%
  def p_arr(property)
    p(property,nil) || []
  end

  job_name = 'metricsserver'
  instance_metrics_db_url = build_db_url('instancemetrics_db', job_name)
  policy_db_url = build_db_url('policy_db', job_name)

  sorted_instances=link("metricsserver").instances.sort_by {|i|i.address}
  nodeIndex=sorted_instances.index(sorted_instances.find{|i|i.id == spec.id})
  addrs=sorted_instances.map{|i| "'#{i.address}'"}
  nodeAddrs="[" + addrs.join(",") +"]"  

%>

logging:
  level: <%= p("autoscaler.metricsserver.logging.level") %>
http_client_timeout: <%= p("autoscaler.metricsserver.http_client_timeout") %>
node_addrs: <%= nodeAddrs %>
node_index: <%= nodeIndex %>
db:
  policy_db:
    url: <%= policy_db_url %>
    max_open_connections: <%= p("autoscaler.policy_db_connection_config.max_open_connections") %>
    max_idle_connections: <%= p("autoscaler.policy_db_connection_config.max_idle_connections") %>
    connection_max_lifetime: <%= p("autoscaler.policy_db_connection_config.connection_max_lifetime") %>
  instance_metrics_db:
    url: <%= instance_metrics_db_url %>
    max_open_connections: <%= p("autoscaler.instancemetrics_db_connection_config.max_open_connections") %>
    max_idle_connections: <%= p("autoscaler.instancemetrics_db_connection_config.max_idle_connections") %>
    connection_max_lifetime: <%= p("autoscaler.instancemetrics_db_connection_config.connection_max_lifetime") %>
collector:
  port: <%= p("autoscaler.metricsserver.collector.port") %>
  keep_alive_time: <%= p("autoscaler.metricsserver.collector.keep_alive_time") %>
  refresh_interval: <%= p("autoscaler.metricsserver.collector.refresh_interval") %>
  collect_interval: <%= p("autoscaler.metricsserver.collector.collect_interval") %>
  save_interval: <%= p("autoscaler.metricsserver.collector.save_interval") %>
  persist_metrics: <%= p("autoscaler.metricsserver.collector.persist_metrics") %>
  envelope_processor_count: <%= p("autoscaler.metricsserver.collector.envelope_processor_count") %>
  metric_cache_size_per_app: <%= p("autoscaler.metricsserver.collector.metric_cache_size_per_app") %>
  envelope_channel_size: <%= p("autoscaler.metricsserver.collector.envelope_channel_size") %>
  metric_channel_size: <%= p("autoscaler.metricsserver.collector.metric_channel_size") %>
  tls:
    key_file: /var/vcap/jobs/metricsserver/config/certs/metricsserver/server.key
    cert_file: /var/vcap/jobs/metricsserver/config/certs/metricsserver/server.crt
    ca_file: /var/vcap/jobs/metricsserver/config/certs/metricsserver/ca.crt

server:
  port:  <%= p("autoscaler.metricsserver.server.port") %>
  tls:
    key_file: /var/vcap/jobs/metricsserver/config/certs/metricsserver/server.key
    cert_file: /var/vcap/jobs/metricsserver/config/certs/metricsserver/server.crt
    ca_file: /var/vcap/jobs/metricsserver/config/certs/metricsserver/ca.crt
health:
  port: <%= p("autoscaler.metricsserver.health.port") %>
  username: <%= p("autoscaler.metricsserver.health.username") %>
  password: <%= p("autoscaler.metricsserver.health.password") %>



